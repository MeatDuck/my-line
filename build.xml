<?xml version="1.0" encoding="utf-8" ?>
<project name="My line" default="build" basedir=".">
  <!-- Configure path to GWT SDK -->
  <property name="gwt.sdk" location="D:\eclipse\plugins\com.google.gwt.eclipse.sdkbundle_2.4.0.v201203300216-rel-r37\gwt-2.4.0" />
  <property name="appengine.sdk" location="D:\eclipse\plugins\com.google.appengine.eclipse.sdkbundle_1.6.4.v201203300216r37\appengine-java-sdk-1.6.4" />
  <import file="${appengine.sdk}/config/user/ant-macros.xml" />
  
	<condition property="XstartOnFirstThread" value="-XstartOnFirstThread">
    <os family="mac"/>
  </condition>
  <condition property="XstartOnFirstThread" value="">
    <not><os family="mac"/></not>
  </condition>

  <path id="project.class.path">
    <pathelement location="war/WEB-INF/classes"/>
    <pathelement location="${gwt.sdk}/gwt-user.jar"/>
    <fileset dir="${gwt.sdk}" includes="gwt-dev*.jar"/>
    <!-- Add any additional non-server libs (such as JUnit) -->
    <fileset dir="war/WEB-INF/lib" includes="**/*.jar"/>
  </path>
	
  <path id="tools.class.path">
	    <path refid="project.class.path"/>
	    <pathelement location="${appengine.sdk}/lib/appengine-tools-api.jar"/>
	    <fileset dir="${appengine.sdk}/lib/tools">
	      <include name="**/asm-*.jar"/>
	      <include name="**/datanucleus-enhancer-*.jar"/>
	    </fileset>
 </path>
	
  <target name="libs" description="Copy libs to WEB-INF/lib">
    <mkdir dir="war/WEB-INF/lib" />
    <copy todir="war/WEB-INF/lib" file="${gwt.sdk}/gwt-servlet.jar" />
    <copy todir="war/WEB-INF/lib" flatten="true">
      <fileset dir="${appengine.sdk}/lib/user" includes="**/*.jar"/>
    </copy>
  </target>

  <target name="javac" depends="libs" description="Compile java source">
    <mkdir dir="war/WEB-INF/classes"/>
    <javac srcdir="src" includes="**" encoding="utf-8"
        destdir="war/WEB-INF/classes"
        source="1.5" target="1.5" nowarn="true"
        debug="true" debuglevel="lines,vars,source">
      <classpath refid="project.class.path"/>
    </javac>
    <copy todir="war/WEB-INF/classes">
      <fileset dir="src" excludes="**/*.java"/>
    </copy>
    <taskdef
       name="datanucleusenhancer"
       classpathref="tools.class.path"
       classname="org.datanucleus.enhancer.tools.EnhancerTask" />
    <datanucleusenhancer
       classpathref="tools.class.path"
       failonerror="true">
      <fileset dir="war/WEB-INF/classes" includes="**/*.class" />
    </datanucleusenhancer>

  </target>

  <target name="gwtc" depends="javac" description="GWT compile to JavaScript">
    <java failonerror="true" fork="true" classname="com.google.gwt.dev.Compiler">
      <classpath>
        <pathelement location="src"/>
        <path refid="project.class.path"/>
      </classpath>
      <!-- add jvmarg -Xss16M or similar if you see a StackOverflowError -->
      <jvmarg value="-Xmx256M"/>
      <jvmarg line="${XstartOnFirstThread}"/>
      <!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
      <arg value="myline.My_line"/>
    </java>
  </target>

  <target name="hosted" depends="javac" description="Run hosted mode">
    <java failonerror="true" fork="true" classname="com.google.gwt.dev.HostedMode">
      <classpath>
        <pathelement location="src"/>
        <path refid="project.class.path"/>
      	<path refid="tools.class.path"/>
      </classpath>
      <jvmarg value="-Xmx256M"/>
      <jvmarg line="${XstartOnFirstThread}"/>
      <arg value="-startupUrl"/>
      <arg value="My_line.html"/>
      <!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
      <arg value="myline.My_line"/>
      <arg value="-server"/>
      <arg value="com.google.appengine.tools.development.gwt.AppEngineLauncher"/>
    </java>
  </target>

  <target name="build" depends="gwtc" description="Build this project" />

  <target name="war" depends="build" description="Create a war file">
    <zip destfile="My_line.war" basedir="war"/>
  </target>
	 
  <target name="copyjars"
	      description="Copies the App Engine JARs to the WAR.">
	    <copy
	        todir="war/WEB-INF/lib"
	        flatten="true">
	      <fileset dir="${appengine.sdk}/lib/user">
	        <include name="**/*.jar" />
	      </fileset>
	    </copy>
 </target>
	 <path id="project.classpath">
	    <pathelement path="war/WEB-INF/classes" />
	    <fileset dir="war/WEB-INF/lib">
	      <include name="**/*.jar" />
	    </fileset>
	    <fileset dir="${appengine.sdk}/lib">
	      <include name="shared/**/*.jar" />
	    </fileset>
	  </path>
  <target name="compile" depends="copyjars"
	      description="Compiles Java source and copies other source files to the WAR.">
	    <mkdir dir="war/WEB-INF/classes" />
	    <copy todir="war/WEB-INF/classes">
	      <fileset dir="src">
	        <exclude name="**/*.java" />
	      </fileset>
	    </copy>
	    <javac
	        srcdir="src"
	        destdir="war/WEB-INF/classes"
	        classpathref="project.classpath"
	        debug="on" />
  </target>
	
  <target name="clean" description="Cleans this project">
    <delete dir="war/WEB-INF/classes" failonerror="false" />
    <delete dir="war/my_line" failonerror="false" />
  </target>

  <target name="datanucleusenhance" depends="compile" description="Performs JDO enhancement on compiled data classes.">
	    <enhance_war war="war" />
  </target>
	
  <target name="runserver" depends="datanucleusenhance" description="Starts the development server.">
	 <dev_appserver war="war" />
  </target>
	
	  <target name="update" depends="datanucleusenhance"
	      description="Uploads the application to App Engine.">
	    <appcfg action="update" war="war" />
	  </target>

	  <target name="update_indexes" depends="datanucleusenhance"
	      description="Uploads just the datastore index configuration to App Engine.">
	    <appcfg action="update_indexes" war="war" />
	  </target>

	  <target name="rollback" depends="datanucleusenhance"
	      description="Rolls back an interrupted application update.">
	    <appcfg action="rollback" war="war" />
	  </target>

	  <target name="request_logs"
	      description="Downloads log data from App Engine for the application.">
	    <appcfg action="request_logs" war="war">
	      <options>
	        <arg value="--num_days=5"/>
	      </options>
	      <args>
	        <arg value="logs.txt"/>
	      </args>
	    </appcfg>
	  </target>
	
	  <target name="javac.tests" depends="javac" description="Compiles test code">
	    <javac includeantruntime="false" srcdir="test" includes="**" encoding="utf-8"
	      source="1.6" target="1.6" nowarn="true"
	      debug="true" debuglevel="lines,vars,source">
	      <classpath location="C:\Documents and Settings\main\workspace\My line\lib\junit-4.10.jar"/>
	      <classpath refid="project.class.path"/>
	    </javac>
	  </target>
	  
	  <target name="test.dev" depends="javac.tests" description="Run development mode tests">
	    <mkdir dir="reports/htmlunit.dev" />
	    <junit fork="yes" printsummary="yes" haltonfailure="yes">
	      <jvmarg line="-Xmx256m" />
	      <sysproperty key="gwt.args" value="-logLevel WARN" />
	      <sysproperty key="java.awt.headless" value="true" />
	      <classpath>
	      	<pathelement location="src" />
	      	<pathelement location="test" />
	        <path refid="project.class.path" />
	        <pathelement location="path_to_the_junit_jar" />
	      </classpath>
	      <batchtest todir="reports/htmlunit.dev" >
	        <fileset dir="test" >
	          <include name="**/*Test.java" />
	        </fileset>
	      </batchtest>
	      <formatter type="plain" />
	      <formatter type="xml" />
	    </junit>
	  </target>

	  <target name="test.prod" depends="javac.tests" description="Run production mode tests">
	    <mkdir dir="reports/htmlunit.prod" />
	    <junit fork="yes" printsummary="yes" haltonfailure="yes">
	      <jvmarg line="-Xmx256m" />
	      <sysproperty key="gwt.args" value="-prod -logLevel WARN -out www-test" />
	      <sysproperty key="java.awt.headless" value="true" />
	      <classpath>
	        <pathelement location="src" />
	        <pathelement location="test" />
	        <path refid="project.class.path" />
	        <pathelement location="path_to_the_junit_jar" />
	      </classpath>
	      <batchtest todir="reports/htmlunit.prod" >
	        <fileset dir="test" >
	          <include name="**/*Test.java" />
	        </fileset>
	      </batchtest>
	      <formatter type="plain" />
	      <formatter type="xml" />
	    </junit>
	  </target>

	  <target name="test" description="Run development and production mode tests">
	    <antcall target="test.dev" />
	    <antcall target="test.prod" />
	  </target>
	
</project>
